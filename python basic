{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyPdEvDR96Uzq0sGx22y9Gkb",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RomizKhan31/practise1/blob/main/python%20basic\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ShJuTNwwLWpQ"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "part - 1: Python variable"
      ],
      "metadata": {
        "id": "-HcBM59WLXkP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = 22045\n",
        "y = \"Romiz_Khan\"\n",
        "t = True\n",
        "d = 3.33\n",
        "print(\"Integer datatype:\",x)\n",
        "print(\"string type:\",y)\n",
        "print(\"boolean datatype:\",t)\n",
        "print(\"double datatype:\",d)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9jYwNWMPLZWb",
        "outputId": "8410f981-2ec5-43c1-88af-0de9504b289a"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Integer datatype: 22045\n",
            "string type: Romiz_Khan\n",
            "boolean datatype: True\n",
            "double datatype: 3.33\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = str(3)\n",
        "y = int(3)\n",
        "z = float(3)"
      ],
      "metadata": {
        "id": "yb0BrJeNSWW4"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "part - 2: Python Datatype"
      ],
      "metadata": {
        "id": "CiEclwKAOG4W"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = 5\n",
        "b = True\n",
        "s = \"RomizKhan\"\n",
        "d = 3.333\n",
        "cmplx = 1j\n",
        "li = [\"applec\",\"banana\",\"cherry\"]\n",
        "ran = range(33)\n",
        "st = {\"apple\", \"banana\", \"cherry\"}\n",
        "n = None\n",
        "print(type(x))\n",
        "print(type(b))\n",
        "print(type(s))\n",
        "print(type(d))\n",
        "print(type(li))\n",
        "print(type(ran))\n",
        "print(type(st))\n",
        "print(type(n))\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ch0j5S2WOTz2",
        "outputId": "d9c10a9c-c8b5-42de-fc3f-b6b43caa279d"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'int'>\n",
            "<class 'bool'>\n",
            "<class 'str'>\n",
            "<class 'float'>\n",
            "<class 'list'>\n",
            "<class 'range'>\n",
            "<class 'set'>\n",
            "<class 'NoneType'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "part - 3:Numbers in Python"
      ],
      "metadata": {
        "id": "mmnI-QXoQwEe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x = 1\n",
        "y = 35656222554887711\n",
        "z = -3255522\n",
        "\n",
        "print(type(x))\n",
        "print(type(y))\n",
        "print(type(z))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "x9FNkpV8RdyC",
        "outputId": "171cb998-8163-4c2b-ae0e-c9c97f2d2e85"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'int'>\n",
            "<class 'int'>\n",
            "<class 'int'>\n"
          ]
        }
      ]
    }
  ]
}